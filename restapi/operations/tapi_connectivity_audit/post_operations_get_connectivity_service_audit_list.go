// Code generated by go-swagger; DO NOT EDIT.

package tapi_connectivity_audit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostOperationsGetConnectivityServiceAuditListHandlerFunc turns a function with the right signature into a post operations get connectivity service audit list handler
type PostOperationsGetConnectivityServiceAuditListHandlerFunc func(PostOperationsGetConnectivityServiceAuditListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostOperationsGetConnectivityServiceAuditListHandlerFunc) Handle(params PostOperationsGetConnectivityServiceAuditListParams) middleware.Responder {
	return fn(params)
}

// PostOperationsGetConnectivityServiceAuditListHandler interface for that can handle valid post operations get connectivity service audit list params
type PostOperationsGetConnectivityServiceAuditListHandler interface {
	Handle(PostOperationsGetConnectivityServiceAuditListParams) middleware.Responder
}

// NewPostOperationsGetConnectivityServiceAuditList creates a new http.Handler for the post operations get connectivity service audit list operation
func NewPostOperationsGetConnectivityServiceAuditList(ctx *middleware.Context, handler PostOperationsGetConnectivityServiceAuditListHandler) *PostOperationsGetConnectivityServiceAuditList {
	return &PostOperationsGetConnectivityServiceAuditList{Context: ctx, Handler: handler}
}

/*PostOperationsGetConnectivityServiceAuditList swagger:route POST /operations/get-connectivity-service-audit-list/ tapi-connectivity-audit postOperationsGetConnectivityServiceAuditList

PostOperationsGetConnectivityServiceAuditList post operations get connectivity service audit list API

*/
type PostOperationsGetConnectivityServiceAuditList struct {
	Context *middleware.Context
	Handler PostOperationsGetConnectivityServiceAuditListHandler
}

func (o *PostOperationsGetConnectivityServiceAuditList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostOperationsGetConnectivityServiceAuditListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
