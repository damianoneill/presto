// Code generated by go-swagger; DO NOT EDIT.

package tapi_common

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/damianoneill/presto/models"
)

// GetDataContextPathUUIDOKCode is the HTTP code returned for type GetDataContextPathUUIDOK
const GetDataContextPathUUIDOKCode int = 200

/*GetDataContextPathUUIDOK tapi.path.computation.Path

swagger:response getDataContextPathUuidOK
*/
type GetDataContextPathUUIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.TapiPathComputationPath `json:"body,omitempty"`
}

// NewGetDataContextPathUUIDOK creates GetDataContextPathUUIDOK with default headers values
func NewGetDataContextPathUUIDOK() *GetDataContextPathUUIDOK {

	return &GetDataContextPathUUIDOK{}
}

// WithPayload adds the payload to the get data context path Uuid o k response
func (o *GetDataContextPathUUIDOK) WithPayload(payload *models.TapiPathComputationPath) *GetDataContextPathUUIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get data context path Uuid o k response
func (o *GetDataContextPathUUIDOK) SetPayload(payload *models.TapiPathComputationPath) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDataContextPathUUIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDataContextPathUUIDBadRequestCode is the HTTP code returned for type GetDataContextPathUUIDBadRequest
const GetDataContextPathUUIDBadRequestCode int = 400

/*GetDataContextPathUUIDBadRequest Internal error

swagger:response getDataContextPathUuidBadRequest
*/
type GetDataContextPathUUIDBadRequest struct {
}

// NewGetDataContextPathUUIDBadRequest creates GetDataContextPathUUIDBadRequest with default headers values
func NewGetDataContextPathUUIDBadRequest() *GetDataContextPathUUIDBadRequest {

	return &GetDataContextPathUUIDBadRequest{}
}

// WriteResponse to the client
func (o *GetDataContextPathUUIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
