// Code generated by go-swagger; DO NOT EDIT.

package tapi_common

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/damianoneill/presto/models"
)

// GetDataContextOKCode is the HTTP code returned for type GetDataContextOK
const GetDataContextOKCode int = 200

/*GetDataContextOK tapi.common.Context

swagger:response getDataContextOK
*/
type GetDataContextOK struct {

	/*
	  In: Body
	*/
	Payload *models.TapiCommonContext `json:"body,omitempty"`
}

// NewGetDataContextOK creates GetDataContextOK with default headers values
func NewGetDataContextOK() *GetDataContextOK {

	return &GetDataContextOK{}
}

// WithPayload adds the payload to the get data context o k response
func (o *GetDataContextOK) WithPayload(payload *models.TapiCommonContext) *GetDataContextOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get data context o k response
func (o *GetDataContextOK) SetPayload(payload *models.TapiCommonContext) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDataContextOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDataContextBadRequestCode is the HTTP code returned for type GetDataContextBadRequest
const GetDataContextBadRequestCode int = 400

/*GetDataContextBadRequest Internal error

swagger:response getDataContextBadRequest
*/
type GetDataContextBadRequest struct {
}

// NewGetDataContextBadRequest creates GetDataContextBadRequest with default headers values
func NewGetDataContextBadRequest() *GetDataContextBadRequest {

	return &GetDataContextBadRequest{}
}

// WriteResponse to the client
func (o *GetDataContextBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
