// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"net/http"
	"strings"

	errors "github.com/go-openapi/errors"
	loads "github.com/go-openapi/loads"
	runtime "github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"
	security "github.com/go-openapi/runtime/security"
	spec "github.com/go-openapi/spec"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/damianoneill/presto/restapi/operations/tapi_common"
	"github.com/damianoneill/presto/restapi/operations/tapi_connectivity"
	"github.com/damianoneill/presto/restapi/operations/tapi_connectivity_audit"
	"github.com/damianoneill/presto/restapi/operations/tapi_path_computation"
	"github.com/damianoneill/presto/restapi/operations/tapi_topology"
)

// NewPrestoAPI creates a new Presto instance
func NewPrestoAPI(spec *loads.Document) *PrestoAPI {
	return &PrestoAPI{
		handlers:            make(map[string]map[string]http.Handler),
		formats:             strfmt.Default,
		defaultConsumes:     "application/json",
		defaultProduces:     "application/json",
		customConsumers:     make(map[string]runtime.Consumer),
		customProducers:     make(map[string]runtime.Producer),
		ServerShutdown:      func() {},
		spec:                spec,
		ServeError:          errors.ServeError,
		BasicAuthenticator:  security.BasicAuth,
		APIKeyAuthenticator: security.APIKeyAuth,
		BearerAuthenticator: security.BearerAuth,
		JSONConsumer:        runtime.JSONConsumer(),
		JSONProducer:        runtime.JSONProducer(),
		TapiCommonGetDataContextHandler: tapi_common.GetDataContextHandlerFunc(func(params tapi_common.GetDataContextParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContext has not yet been implemented")
		}),
		TapiCommonGetDataContextConnectionUUIDHandler: tapi_common.GetDataContextConnectionUUIDHandlerFunc(func(params tapi_common.GetDataContextConnectionUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextConnectionUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextConnectionUUIDSwitchControlSwitchControlUUIDHandler: tapi_common.GetDataContextConnectionUUIDSwitchControlSwitchControlUUIDHandlerFunc(func(params tapi_common.GetDataContextConnectionUUIDSwitchControlSwitchControlUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextConnectionUUIDSwitchControlSwitchControlUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextConnectivityServiceUUIDHandler: tapi_common.GetDataContextConnectivityServiceUUIDHandlerFunc(func(params tapi_common.GetDataContextConnectivityServiceUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextConnectivityServiceUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextNwTopologyServiceHandler: tapi_common.GetDataContextNwTopologyServiceHandlerFunc(func(params tapi_common.GetDataContextNwTopologyServiceParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextNwTopologyService has not yet been implemented")
		}),
		TapiCommonGetDataContextPathCompServiceUUIDHandler: tapi_common.GetDataContextPathCompServiceUUIDHandlerFunc(func(params tapi_common.GetDataContextPathCompServiceUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextPathCompServiceUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextPathUUIDHandler: tapi_common.GetDataContextPathUUIDHandlerFunc(func(params tapi_common.GetDataContextPathUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextPathUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextServiceInterfacePointUUIDHandler: tapi_common.GetDataContextServiceInterfacePointUUIDHandlerFunc(func(params tapi_common.GetDataContextServiceInterfacePointUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextServiceInterfacePointUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextTopologyUUIDHandler: tapi_common.GetDataContextTopologyUUIDHandlerFunc(func(params tapi_common.GetDataContextTopologyUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextTopologyUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextTopologyUUIDLinkLinkUUIDHandler: tapi_common.GetDataContextTopologyUUIDLinkLinkUUIDHandlerFunc(func(params tapi_common.GetDataContextTopologyUUIDLinkLinkUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextTopologyUUIDLinkLinkUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDHandler: tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDHandlerFunc(func(params tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextTopologyUUIDNodeNodeUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDHandler: tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDHandlerFunc(func(params tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUIDHandler: tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUIDHandlerFunc(func(params tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDHandler: tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDHandlerFunc(func(params tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUID has not yet been implemented")
		}),
		TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUIDHandler: tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUIDHandlerFunc(func(params tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUIDParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUID has not yet been implemented")
		}),
		TapiPathComputationPostOperationsComputeP2PPathHandler: tapi_path_computation.PostOperationsComputeP2PPathHandlerFunc(func(params tapi_path_computation.PostOperationsComputeP2PPathParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiPathComputationPostOperationsComputeP2PPath has not yet been implemented")
		}),
		TapiConnectivityPostOperationsCreateConnectivityServiceHandler: tapi_connectivity.PostOperationsCreateConnectivityServiceHandlerFunc(func(params tapi_connectivity.PostOperationsCreateConnectivityServiceParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiConnectivityPostOperationsCreateConnectivityService has not yet been implemented")
		}),
		TapiConnectivityPostOperationsDeleteConnectivityServiceHandler: tapi_connectivity.PostOperationsDeleteConnectivityServiceHandlerFunc(func(params tapi_connectivity.PostOperationsDeleteConnectivityServiceParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiConnectivityPostOperationsDeleteConnectivityService has not yet been implemented")
		}),
		TapiPathComputationPostOperationsDeleteP2PPathHandler: tapi_path_computation.PostOperationsDeleteP2PPathHandlerFunc(func(params tapi_path_computation.PostOperationsDeleteP2PPathParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiPathComputationPostOperationsDeleteP2PPath has not yet been implemented")
		}),
		TapiConnectivityPostOperationsGetConnectionDetailsHandler: tapi_connectivity.PostOperationsGetConnectionDetailsHandlerFunc(func(params tapi_connectivity.PostOperationsGetConnectionDetailsParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiConnectivityPostOperationsGetConnectionDetails has not yet been implemented")
		}),
		TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditDetailsHandler: tapi_connectivity_audit.PostOperationsGetConnectivityServiceAuditDetailsHandlerFunc(func(params tapi_connectivity_audit.PostOperationsGetConnectivityServiceAuditDetailsParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditDetails has not yet been implemented")
		}),
		TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditListHandler: tapi_connectivity_audit.PostOperationsGetConnectivityServiceAuditListHandlerFunc(func(params tapi_connectivity_audit.PostOperationsGetConnectivityServiceAuditListParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditList has not yet been implemented")
		}),
		TapiConnectivityPostOperationsGetConnectivityServiceDetailsHandler: tapi_connectivity.PostOperationsGetConnectivityServiceDetailsHandlerFunc(func(params tapi_connectivity.PostOperationsGetConnectivityServiceDetailsParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiConnectivityPostOperationsGetConnectivityServiceDetails has not yet been implemented")
		}),
		TapiConnectivityPostOperationsGetConnectivityServiceListHandler: tapi_connectivity.PostOperationsGetConnectivityServiceListHandlerFunc(func(params tapi_connectivity.PostOperationsGetConnectivityServiceListParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiConnectivityPostOperationsGetConnectivityServiceList has not yet been implemented")
		}),
		TapiTopologyPostOperationsGetLinkDetailsHandler: tapi_topology.PostOperationsGetLinkDetailsHandlerFunc(func(params tapi_topology.PostOperationsGetLinkDetailsParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiTopologyPostOperationsGetLinkDetails has not yet been implemented")
		}),
		TapiTopologyPostOperationsGetNodeDetailsHandler: tapi_topology.PostOperationsGetNodeDetailsHandlerFunc(func(params tapi_topology.PostOperationsGetNodeDetailsParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiTopologyPostOperationsGetNodeDetails has not yet been implemented")
		}),
		TapiTopologyPostOperationsGetNodeEdgePointDetailsHandler: tapi_topology.PostOperationsGetNodeEdgePointDetailsHandlerFunc(func(params tapi_topology.PostOperationsGetNodeEdgePointDetailsParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiTopologyPostOperationsGetNodeEdgePointDetails has not yet been implemented")
		}),
		TapiCommonPostOperationsGetServiceInterfacePointDetailsHandler: tapi_common.PostOperationsGetServiceInterfacePointDetailsHandlerFunc(func(params tapi_common.PostOperationsGetServiceInterfacePointDetailsParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonPostOperationsGetServiceInterfacePointDetails has not yet been implemented")
		}),
		TapiCommonPostOperationsGetServiceInterfacePointListHandler: tapi_common.PostOperationsGetServiceInterfacePointListHandlerFunc(func(params tapi_common.PostOperationsGetServiceInterfacePointListParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonPostOperationsGetServiceInterfacePointList has not yet been implemented")
		}),
		TapiTopologyPostOperationsGetTopologyDetailsHandler: tapi_topology.PostOperationsGetTopologyDetailsHandlerFunc(func(params tapi_topology.PostOperationsGetTopologyDetailsParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiTopologyPostOperationsGetTopologyDetails has not yet been implemented")
		}),
		TapiTopologyPostOperationsGetTopologyListHandler: tapi_topology.PostOperationsGetTopologyListHandlerFunc(func(params tapi_topology.PostOperationsGetTopologyListParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiTopologyPostOperationsGetTopologyList has not yet been implemented")
		}),
		TapiPathComputationPostOperationsOptimizeP2PPathHandler: tapi_path_computation.PostOperationsOptimizeP2PPathHandlerFunc(func(params tapi_path_computation.PostOperationsOptimizeP2PPathParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiPathComputationPostOperationsOptimizeP2PPath has not yet been implemented")
		}),
		TapiConnectivityPostOperationsUpdateConnectivityServiceHandler: tapi_connectivity.PostOperationsUpdateConnectivityServiceHandlerFunc(func(params tapi_connectivity.PostOperationsUpdateConnectivityServiceParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiConnectivityPostOperationsUpdateConnectivityService has not yet been implemented")
		}),
		TapiCommonPostOperationsUpdateServiceInterfacePointHandler: tapi_common.PostOperationsUpdateServiceInterfacePointHandlerFunc(func(params tapi_common.PostOperationsUpdateServiceInterfacePointParams) middleware.Responder {
			return middleware.NotImplemented("operation TapiCommonPostOperationsUpdateServiceInterfacePoint has not yet been implemented")
		}),
	}
}

/*PrestoAPI mef-common-types,tapi-connectivity-audit,tapi-topology,nrp-interface,tapi-common,nrp-audit-interface,mef-common,nrm-connectivity,tapi-path-computation,tapi-connectivity API generated from yang definitions */
type PrestoAPI struct {
	spec            *loads.Document
	context         *middleware.Context
	handlers        map[string]map[string]http.Handler
	formats         strfmt.Registry
	customConsumers map[string]runtime.Consumer
	customProducers map[string]runtime.Producer
	defaultConsumes string
	defaultProduces string
	Middleware      func(middleware.Builder) http.Handler

	// BasicAuthenticator generates a runtime.Authenticator from the supplied basic auth function.
	// It has a default implementation in the security package, however you can replace it for your particular usage.
	BasicAuthenticator func(security.UserPassAuthentication) runtime.Authenticator
	// APIKeyAuthenticator generates a runtime.Authenticator from the supplied token auth function.
	// It has a default implementation in the security package, however you can replace it for your particular usage.
	APIKeyAuthenticator func(string, string, security.TokenAuthentication) runtime.Authenticator
	// BearerAuthenticator generates a runtime.Authenticator from the supplied bearer token auth function.
	// It has a default implementation in the security package, however you can replace it for your particular usage.
	BearerAuthenticator func(string, security.ScopedTokenAuthentication) runtime.Authenticator

	// JSONConsumer registers a consumer for a "application/yang-data+json" mime type
	JSONConsumer runtime.Consumer

	// JSONProducer registers a producer for a "application/yang-data+json" mime type
	JSONProducer runtime.Producer

	// TapiCommonGetDataContextHandler sets the operation handler for the get data context operation
	TapiCommonGetDataContextHandler tapi_common.GetDataContextHandler
	// TapiCommonGetDataContextConnectionUUIDHandler sets the operation handler for the get data context connection UUID operation
	TapiCommonGetDataContextConnectionUUIDHandler tapi_common.GetDataContextConnectionUUIDHandler
	// TapiCommonGetDataContextConnectionUUIDSwitchControlSwitchControlUUIDHandler sets the operation handler for the get data context connection UUID switch control switch control UUID operation
	TapiCommonGetDataContextConnectionUUIDSwitchControlSwitchControlUUIDHandler tapi_common.GetDataContextConnectionUUIDSwitchControlSwitchControlUUIDHandler
	// TapiCommonGetDataContextConnectivityServiceUUIDHandler sets the operation handler for the get data context connectivity service UUID operation
	TapiCommonGetDataContextConnectivityServiceUUIDHandler tapi_common.GetDataContextConnectivityServiceUUIDHandler
	// TapiCommonGetDataContextNwTopologyServiceHandler sets the operation handler for the get data context nw topology service operation
	TapiCommonGetDataContextNwTopologyServiceHandler tapi_common.GetDataContextNwTopologyServiceHandler
	// TapiCommonGetDataContextPathCompServiceUUIDHandler sets the operation handler for the get data context path comp service UUID operation
	TapiCommonGetDataContextPathCompServiceUUIDHandler tapi_common.GetDataContextPathCompServiceUUIDHandler
	// TapiCommonGetDataContextPathUUIDHandler sets the operation handler for the get data context path UUID operation
	TapiCommonGetDataContextPathUUIDHandler tapi_common.GetDataContextPathUUIDHandler
	// TapiCommonGetDataContextServiceInterfacePointUUIDHandler sets the operation handler for the get data context service interface point UUID operation
	TapiCommonGetDataContextServiceInterfacePointUUIDHandler tapi_common.GetDataContextServiceInterfacePointUUIDHandler
	// TapiCommonGetDataContextTopologyUUIDHandler sets the operation handler for the get data context topology UUID operation
	TapiCommonGetDataContextTopologyUUIDHandler tapi_common.GetDataContextTopologyUUIDHandler
	// TapiCommonGetDataContextTopologyUUIDLinkLinkUUIDHandler sets the operation handler for the get data context topology UUID link link UUID operation
	TapiCommonGetDataContextTopologyUUIDLinkLinkUUIDHandler tapi_common.GetDataContextTopologyUUIDLinkLinkUUIDHandler
	// TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDHandler sets the operation handler for the get data context topology UUID node node UUID operation
	TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDHandler tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDHandler
	// TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDHandler sets the operation handler for the get data context topology UUID node node UUID node rule group node rule group UUID operation
	TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDHandler tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDHandler
	// TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUIDHandler sets the operation handler for the get data context topology UUID node node UUID node rule group node rule group UUID inter rule group inter rule group UUID operation
	TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUIDHandler tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUIDHandler
	// TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDHandler sets the operation handler for the get data context topology UUID node node UUID owned node edge point owned node edge point UUID operation
	TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDHandler tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDHandler
	// TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUIDHandler sets the operation handler for the get data context topology UUID node node UUID owned node edge point owned node edge point UUID connection end point connection end point UUID operation
	TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUIDHandler tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUIDHandler
	// TapiPathComputationPostOperationsComputeP2PPathHandler sets the operation handler for the post operations compute p2 p path operation
	TapiPathComputationPostOperationsComputeP2PPathHandler tapi_path_computation.PostOperationsComputeP2PPathHandler
	// TapiConnectivityPostOperationsCreateConnectivityServiceHandler sets the operation handler for the post operations create connectivity service operation
	TapiConnectivityPostOperationsCreateConnectivityServiceHandler tapi_connectivity.PostOperationsCreateConnectivityServiceHandler
	// TapiConnectivityPostOperationsDeleteConnectivityServiceHandler sets the operation handler for the post operations delete connectivity service operation
	TapiConnectivityPostOperationsDeleteConnectivityServiceHandler tapi_connectivity.PostOperationsDeleteConnectivityServiceHandler
	// TapiPathComputationPostOperationsDeleteP2PPathHandler sets the operation handler for the post operations delete p2 p path operation
	TapiPathComputationPostOperationsDeleteP2PPathHandler tapi_path_computation.PostOperationsDeleteP2PPathHandler
	// TapiConnectivityPostOperationsGetConnectionDetailsHandler sets the operation handler for the post operations get connection details operation
	TapiConnectivityPostOperationsGetConnectionDetailsHandler tapi_connectivity.PostOperationsGetConnectionDetailsHandler
	// TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditDetailsHandler sets the operation handler for the post operations get connectivity service audit details operation
	TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditDetailsHandler tapi_connectivity_audit.PostOperationsGetConnectivityServiceAuditDetailsHandler
	// TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditListHandler sets the operation handler for the post operations get connectivity service audit list operation
	TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditListHandler tapi_connectivity_audit.PostOperationsGetConnectivityServiceAuditListHandler
	// TapiConnectivityPostOperationsGetConnectivityServiceDetailsHandler sets the operation handler for the post operations get connectivity service details operation
	TapiConnectivityPostOperationsGetConnectivityServiceDetailsHandler tapi_connectivity.PostOperationsGetConnectivityServiceDetailsHandler
	// TapiConnectivityPostOperationsGetConnectivityServiceListHandler sets the operation handler for the post operations get connectivity service list operation
	TapiConnectivityPostOperationsGetConnectivityServiceListHandler tapi_connectivity.PostOperationsGetConnectivityServiceListHandler
	// TapiTopologyPostOperationsGetLinkDetailsHandler sets the operation handler for the post operations get link details operation
	TapiTopologyPostOperationsGetLinkDetailsHandler tapi_topology.PostOperationsGetLinkDetailsHandler
	// TapiTopologyPostOperationsGetNodeDetailsHandler sets the operation handler for the post operations get node details operation
	TapiTopologyPostOperationsGetNodeDetailsHandler tapi_topology.PostOperationsGetNodeDetailsHandler
	// TapiTopologyPostOperationsGetNodeEdgePointDetailsHandler sets the operation handler for the post operations get node edge point details operation
	TapiTopologyPostOperationsGetNodeEdgePointDetailsHandler tapi_topology.PostOperationsGetNodeEdgePointDetailsHandler
	// TapiCommonPostOperationsGetServiceInterfacePointDetailsHandler sets the operation handler for the post operations get service interface point details operation
	TapiCommonPostOperationsGetServiceInterfacePointDetailsHandler tapi_common.PostOperationsGetServiceInterfacePointDetailsHandler
	// TapiCommonPostOperationsGetServiceInterfacePointListHandler sets the operation handler for the post operations get service interface point list operation
	TapiCommonPostOperationsGetServiceInterfacePointListHandler tapi_common.PostOperationsGetServiceInterfacePointListHandler
	// TapiTopologyPostOperationsGetTopologyDetailsHandler sets the operation handler for the post operations get topology details operation
	TapiTopologyPostOperationsGetTopologyDetailsHandler tapi_topology.PostOperationsGetTopologyDetailsHandler
	// TapiTopologyPostOperationsGetTopologyListHandler sets the operation handler for the post operations get topology list operation
	TapiTopologyPostOperationsGetTopologyListHandler tapi_topology.PostOperationsGetTopologyListHandler
	// TapiPathComputationPostOperationsOptimizeP2PPathHandler sets the operation handler for the post operations optimize p2 p path operation
	TapiPathComputationPostOperationsOptimizeP2PPathHandler tapi_path_computation.PostOperationsOptimizeP2PPathHandler
	// TapiConnectivityPostOperationsUpdateConnectivityServiceHandler sets the operation handler for the post operations update connectivity service operation
	TapiConnectivityPostOperationsUpdateConnectivityServiceHandler tapi_connectivity.PostOperationsUpdateConnectivityServiceHandler
	// TapiCommonPostOperationsUpdateServiceInterfacePointHandler sets the operation handler for the post operations update service interface point operation
	TapiCommonPostOperationsUpdateServiceInterfacePointHandler tapi_common.PostOperationsUpdateServiceInterfacePointHandler

	// ServeError is called when an error is received, there is a default handler
	// but you can set your own with this
	ServeError func(http.ResponseWriter, *http.Request, error)

	// ServerShutdown is called when the HTTP(S) server is shut down and done
	// handling all active connections and does not accept connections any more
	ServerShutdown func()

	// Custom command line argument groups with their descriptions
	CommandLineOptionsGroups []swag.CommandLineOptionsGroup

	// User defined logger function.
	Logger func(string, ...interface{})
}

// SetDefaultProduces sets the default produces media type
func (o *PrestoAPI) SetDefaultProduces(mediaType string) {
	o.defaultProduces = mediaType
}

// SetDefaultConsumes returns the default consumes media type
func (o *PrestoAPI) SetDefaultConsumes(mediaType string) {
	o.defaultConsumes = mediaType
}

// SetSpec sets a spec that will be served for the clients.
func (o *PrestoAPI) SetSpec(spec *loads.Document) {
	o.spec = spec
}

// DefaultProduces returns the default produces media type
func (o *PrestoAPI) DefaultProduces() string {
	return o.defaultProduces
}

// DefaultConsumes returns the default consumes media type
func (o *PrestoAPI) DefaultConsumes() string {
	return o.defaultConsumes
}

// Formats returns the registered string formats
func (o *PrestoAPI) Formats() strfmt.Registry {
	return o.formats
}

// RegisterFormat registers a custom format validator
func (o *PrestoAPI) RegisterFormat(name string, format strfmt.Format, validator strfmt.Validator) {
	o.formats.Add(name, format, validator)
}

// Validate validates the registrations in the PrestoAPI
func (o *PrestoAPI) Validate() error {
	var unregistered []string

	if o.JSONConsumer == nil {
		unregistered = append(unregistered, "JSONConsumer")
	}

	if o.JSONProducer == nil {
		unregistered = append(unregistered, "JSONProducer")
	}

	if o.TapiCommonGetDataContextHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextHandler")
	}

	if o.TapiCommonGetDataContextConnectionUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextConnectionUUIDHandler")
	}

	if o.TapiCommonGetDataContextConnectionUUIDSwitchControlSwitchControlUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextConnectionUUIDSwitchControlSwitchControlUUIDHandler")
	}

	if o.TapiCommonGetDataContextConnectivityServiceUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextConnectivityServiceUUIDHandler")
	}

	if o.TapiCommonGetDataContextNwTopologyServiceHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextNwTopologyServiceHandler")
	}

	if o.TapiCommonGetDataContextPathCompServiceUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextPathCompServiceUUIDHandler")
	}

	if o.TapiCommonGetDataContextPathUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextPathUUIDHandler")
	}

	if o.TapiCommonGetDataContextServiceInterfacePointUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextServiceInterfacePointUUIDHandler")
	}

	if o.TapiCommonGetDataContextTopologyUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextTopologyUUIDHandler")
	}

	if o.TapiCommonGetDataContextTopologyUUIDLinkLinkUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextTopologyUUIDLinkLinkUUIDHandler")
	}

	if o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDHandler")
	}

	if o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDHandler")
	}

	if o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUIDHandler")
	}

	if o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDHandler")
	}

	if o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUIDHandler == nil {
		unregistered = append(unregistered, "tapi_common.GetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUIDHandler")
	}

	if o.TapiPathComputationPostOperationsComputeP2PPathHandler == nil {
		unregistered = append(unregistered, "tapi_path_computation.PostOperationsComputeP2PPathHandler")
	}

	if o.TapiConnectivityPostOperationsCreateConnectivityServiceHandler == nil {
		unregistered = append(unregistered, "tapi_connectivity.PostOperationsCreateConnectivityServiceHandler")
	}

	if o.TapiConnectivityPostOperationsDeleteConnectivityServiceHandler == nil {
		unregistered = append(unregistered, "tapi_connectivity.PostOperationsDeleteConnectivityServiceHandler")
	}

	if o.TapiPathComputationPostOperationsDeleteP2PPathHandler == nil {
		unregistered = append(unregistered, "tapi_path_computation.PostOperationsDeleteP2PPathHandler")
	}

	if o.TapiConnectivityPostOperationsGetConnectionDetailsHandler == nil {
		unregistered = append(unregistered, "tapi_connectivity.PostOperationsGetConnectionDetailsHandler")
	}

	if o.TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditDetailsHandler == nil {
		unregistered = append(unregistered, "tapi_connectivity_audit.PostOperationsGetConnectivityServiceAuditDetailsHandler")
	}

	if o.TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditListHandler == nil {
		unregistered = append(unregistered, "tapi_connectivity_audit.PostOperationsGetConnectivityServiceAuditListHandler")
	}

	if o.TapiConnectivityPostOperationsGetConnectivityServiceDetailsHandler == nil {
		unregistered = append(unregistered, "tapi_connectivity.PostOperationsGetConnectivityServiceDetailsHandler")
	}

	if o.TapiConnectivityPostOperationsGetConnectivityServiceListHandler == nil {
		unregistered = append(unregistered, "tapi_connectivity.PostOperationsGetConnectivityServiceListHandler")
	}

	if o.TapiTopologyPostOperationsGetLinkDetailsHandler == nil {
		unregistered = append(unregistered, "tapi_topology.PostOperationsGetLinkDetailsHandler")
	}

	if o.TapiTopologyPostOperationsGetNodeDetailsHandler == nil {
		unregistered = append(unregistered, "tapi_topology.PostOperationsGetNodeDetailsHandler")
	}

	if o.TapiTopologyPostOperationsGetNodeEdgePointDetailsHandler == nil {
		unregistered = append(unregistered, "tapi_topology.PostOperationsGetNodeEdgePointDetailsHandler")
	}

	if o.TapiCommonPostOperationsGetServiceInterfacePointDetailsHandler == nil {
		unregistered = append(unregistered, "tapi_common.PostOperationsGetServiceInterfacePointDetailsHandler")
	}

	if o.TapiCommonPostOperationsGetServiceInterfacePointListHandler == nil {
		unregistered = append(unregistered, "tapi_common.PostOperationsGetServiceInterfacePointListHandler")
	}

	if o.TapiTopologyPostOperationsGetTopologyDetailsHandler == nil {
		unregistered = append(unregistered, "tapi_topology.PostOperationsGetTopologyDetailsHandler")
	}

	if o.TapiTopologyPostOperationsGetTopologyListHandler == nil {
		unregistered = append(unregistered, "tapi_topology.PostOperationsGetTopologyListHandler")
	}

	if o.TapiPathComputationPostOperationsOptimizeP2PPathHandler == nil {
		unregistered = append(unregistered, "tapi_path_computation.PostOperationsOptimizeP2PPathHandler")
	}

	if o.TapiConnectivityPostOperationsUpdateConnectivityServiceHandler == nil {
		unregistered = append(unregistered, "tapi_connectivity.PostOperationsUpdateConnectivityServiceHandler")
	}

	if o.TapiCommonPostOperationsUpdateServiceInterfacePointHandler == nil {
		unregistered = append(unregistered, "tapi_common.PostOperationsUpdateServiceInterfacePointHandler")
	}

	if len(unregistered) > 0 {
		return fmt.Errorf("missing registration: %s", strings.Join(unregistered, ", "))
	}

	return nil
}

// ServeErrorFor gets a error handler for a given operation id
func (o *PrestoAPI) ServeErrorFor(operationID string) func(http.ResponseWriter, *http.Request, error) {
	return o.ServeError
}

// AuthenticatorsFor gets the authenticators for the specified security schemes
func (o *PrestoAPI) AuthenticatorsFor(schemes map[string]spec.SecurityScheme) map[string]runtime.Authenticator {

	return nil

}

// Authorizer returns the registered authorizer
func (o *PrestoAPI) Authorizer() runtime.Authorizer {

	return nil

}

// ConsumersFor gets the consumers for the specified media types
func (o *PrestoAPI) ConsumersFor(mediaTypes []string) map[string]runtime.Consumer {

	result := make(map[string]runtime.Consumer)
	for _, mt := range mediaTypes {
		switch mt {

		case "application/yang-data+json":
			result["application/yang-data+json"] = o.JSONConsumer

		}

		if c, ok := o.customConsumers[mt]; ok {
			result[mt] = c
		}
	}
	return result

}

// ProducersFor gets the producers for the specified media types
func (o *PrestoAPI) ProducersFor(mediaTypes []string) map[string]runtime.Producer {

	result := make(map[string]runtime.Producer)
	for _, mt := range mediaTypes {
		switch mt {

		case "application/yang-data+json":
			result["application/yang-data+json"] = o.JSONProducer

		}

		if p, ok := o.customProducers[mt]; ok {
			result[mt] = p
		}
	}
	return result

}

// HandlerFor gets a http.Handler for the provided operation method and path
func (o *PrestoAPI) HandlerFor(method, path string) (http.Handler, bool) {
	if o.handlers == nil {
		return nil, false
	}
	um := strings.ToUpper(method)
	if _, ok := o.handlers[um]; !ok {
		return nil, false
	}
	if path == "/" {
		path = ""
	}
	h, ok := o.handlers[um][path]
	return h, ok
}

// Context returns the middleware context for the presto API
func (o *PrestoAPI) Context() *middleware.Context {
	if o.context == nil {
		o.context = middleware.NewRoutableContext(o.spec, o, nil)
	}

	return o.context
}

func (o *PrestoAPI) initHandlerCache() {
	o.Context() // don't care about the result, just that the initialization happened

	if o.handlers == nil {
		o.handlers = make(map[string]map[string]http.Handler)
	}

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context"] = tapi_common.NewGetDataContext(o.context, o.TapiCommonGetDataContextHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/connection={uuid}"] = tapi_common.NewGetDataContextConnectionUUID(o.context, o.TapiCommonGetDataContextConnectionUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/connection={uuid}/switch-control={switch-control-uuid}"] = tapi_common.NewGetDataContextConnectionUUIDSwitchControlSwitchControlUUID(o.context, o.TapiCommonGetDataContextConnectionUUIDSwitchControlSwitchControlUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/connectivity-service={uuid}"] = tapi_common.NewGetDataContextConnectivityServiceUUID(o.context, o.TapiCommonGetDataContextConnectivityServiceUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/nw-topology-service"] = tapi_common.NewGetDataContextNwTopologyService(o.context, o.TapiCommonGetDataContextNwTopologyServiceHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/path-comp-service={uuid}"] = tapi_common.NewGetDataContextPathCompServiceUUID(o.context, o.TapiCommonGetDataContextPathCompServiceUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/path={uuid}"] = tapi_common.NewGetDataContextPathUUID(o.context, o.TapiCommonGetDataContextPathUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/service-interface-point={uuid}"] = tapi_common.NewGetDataContextServiceInterfacePointUUID(o.context, o.TapiCommonGetDataContextServiceInterfacePointUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/topology={uuid}"] = tapi_common.NewGetDataContextTopologyUUID(o.context, o.TapiCommonGetDataContextTopologyUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/topology={uuid}/link={link-uuid}"] = tapi_common.NewGetDataContextTopologyUUIDLinkLinkUUID(o.context, o.TapiCommonGetDataContextTopologyUUIDLinkLinkUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/topology={uuid}/node={node-uuid}"] = tapi_common.NewGetDataContextTopologyUUIDNodeNodeUUID(o.context, o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}"] = tapi_common.NewGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUID(o.context, o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/topology={uuid}/node={node-uuid}/node-rule-group={node-rule-group-uuid}/inter-rule-group={inter-rule-group-uuid}"] = tapi_common.NewGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUID(o.context, o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDNodeRuleGroupNodeRuleGroupUUIDInterRuleGroupInterRuleGroupUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}"] = tapi_common.NewGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUID(o.context, o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDHandler)

	if o.handlers["GET"] == nil {
		o.handlers["GET"] = make(map[string]http.Handler)
	}
	o.handlers["GET"]["/data/context/topology={uuid}/node={node-uuid}/owned-node-edge-point={owned-node-edge-point-uuid}/connection-end-point={connection-end-point-uuid}"] = tapi_common.NewGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUID(o.context, o.TapiCommonGetDataContextTopologyUUIDNodeNodeUUIDOwnedNodeEdgePointOwnedNodeEdgePointUUIDConnectionEndPointConnectionEndPointUUIDHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/compute-p-2-p-path"] = tapi_path_computation.NewPostOperationsComputeP2PPath(o.context, o.TapiPathComputationPostOperationsComputeP2PPathHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/create-connectivity-service"] = tapi_connectivity.NewPostOperationsCreateConnectivityService(o.context, o.TapiConnectivityPostOperationsCreateConnectivityServiceHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/delete-connectivity-service"] = tapi_connectivity.NewPostOperationsDeleteConnectivityService(o.context, o.TapiConnectivityPostOperationsDeleteConnectivityServiceHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/delete-p-2-p-path"] = tapi_path_computation.NewPostOperationsDeleteP2PPath(o.context, o.TapiPathComputationPostOperationsDeleteP2PPathHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-connection-details"] = tapi_connectivity.NewPostOperationsGetConnectionDetails(o.context, o.TapiConnectivityPostOperationsGetConnectionDetailsHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-connectivity-service-audit-details"] = tapi_connectivity_audit.NewPostOperationsGetConnectivityServiceAuditDetails(o.context, o.TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditDetailsHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-connectivity-service-audit-list"] = tapi_connectivity_audit.NewPostOperationsGetConnectivityServiceAuditList(o.context, o.TapiConnectivityAuditPostOperationsGetConnectivityServiceAuditListHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-connectivity-service-details"] = tapi_connectivity.NewPostOperationsGetConnectivityServiceDetails(o.context, o.TapiConnectivityPostOperationsGetConnectivityServiceDetailsHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-connectivity-service-list"] = tapi_connectivity.NewPostOperationsGetConnectivityServiceList(o.context, o.TapiConnectivityPostOperationsGetConnectivityServiceListHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-link-details"] = tapi_topology.NewPostOperationsGetLinkDetails(o.context, o.TapiTopologyPostOperationsGetLinkDetailsHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-node-details"] = tapi_topology.NewPostOperationsGetNodeDetails(o.context, o.TapiTopologyPostOperationsGetNodeDetailsHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-node-edge-point-details"] = tapi_topology.NewPostOperationsGetNodeEdgePointDetails(o.context, o.TapiTopologyPostOperationsGetNodeEdgePointDetailsHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-service-interface-point-details"] = tapi_common.NewPostOperationsGetServiceInterfacePointDetails(o.context, o.TapiCommonPostOperationsGetServiceInterfacePointDetailsHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-service-interface-point-list"] = tapi_common.NewPostOperationsGetServiceInterfacePointList(o.context, o.TapiCommonPostOperationsGetServiceInterfacePointListHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-topology-details"] = tapi_topology.NewPostOperationsGetTopologyDetails(o.context, o.TapiTopologyPostOperationsGetTopologyDetailsHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/get-topology-list"] = tapi_topology.NewPostOperationsGetTopologyList(o.context, o.TapiTopologyPostOperationsGetTopologyListHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/optimize-p-2-p-path"] = tapi_path_computation.NewPostOperationsOptimizeP2PPath(o.context, o.TapiPathComputationPostOperationsOptimizeP2PPathHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/update-connectivity-service"] = tapi_connectivity.NewPostOperationsUpdateConnectivityService(o.context, o.TapiConnectivityPostOperationsUpdateConnectivityServiceHandler)

	if o.handlers["POST"] == nil {
		o.handlers["POST"] = make(map[string]http.Handler)
	}
	o.handlers["POST"]["/operations/update-service-interface-point"] = tapi_common.NewPostOperationsUpdateServiceInterfacePoint(o.context, o.TapiCommonPostOperationsUpdateServiceInterfacePointHandler)

}

// Serve creates a http handler to serve the API over HTTP
// can be used directly in http.ListenAndServe(":8000", api.Serve(nil))
func (o *PrestoAPI) Serve(builder middleware.Builder) http.Handler {
	o.Init()

	if o.Middleware != nil {
		return o.Middleware(builder)
	}
	return o.context.APIHandler(builder)
}

// Init allows you to just initialize the handler cache, you can then recompose the middleware as you see fit
func (o *PrestoAPI) Init() {
	if len(o.handlers) == 0 {
		o.initHandlerCache()
	}
}

// RegisterConsumer allows you to add (or override) a consumer for a media type.
func (o *PrestoAPI) RegisterConsumer(mediaType string, consumer runtime.Consumer) {
	o.customConsumers[mediaType] = consumer
}

// RegisterProducer allows you to add (or override) a producer for a media type.
func (o *PrestoAPI) RegisterProducer(mediaType string, producer runtime.Producer) {
	o.customProducers[mediaType] = producer
}
