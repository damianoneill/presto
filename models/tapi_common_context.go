// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiCommonContext tapi common context
// swagger:model tapi.common.Context
type TapiCommonContext struct {
	TapiCommonGlobalClass

	TapiConnectivityContextAugmentation2

	TapiPathComputationContextAugmentation1

	TapiTopologyContextAugmentation3

	// none
	ServiceInterfacePoint []*TapiCommonContextServiceInterfacePoint `json:"service-interface-point"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiCommonContext) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonGlobalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonGlobalClass = aO0

	// AO1
	var aO1 TapiConnectivityContextAugmentation2
	if err := swag.ReadJSON(raw, &aO1); err != nil {
		return err
	}
	m.TapiConnectivityContextAugmentation2 = aO1

	// AO2
	var aO2 TapiPathComputationContextAugmentation1
	if err := swag.ReadJSON(raw, &aO2); err != nil {
		return err
	}
	m.TapiPathComputationContextAugmentation1 = aO2

	// AO3
	var aO3 TapiTopologyContextAugmentation3
	if err := swag.ReadJSON(raw, &aO3); err != nil {
		return err
	}
	m.TapiTopologyContextAugmentation3 = aO3

	// AO4
	var dataAO4 struct {
		ServiceInterfacePoint []*TapiCommonContextServiceInterfacePoint `json:"service-interface-point"`
	}
	if err := swag.ReadJSON(raw, &dataAO4); err != nil {
		return err
	}

	m.ServiceInterfacePoint = dataAO4.ServiceInterfacePoint

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiCommonContext) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 5)

	aO0, err := swag.WriteJSON(m.TapiCommonGlobalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	aO1, err := swag.WriteJSON(m.TapiConnectivityContextAugmentation2)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO1)

	aO2, err := swag.WriteJSON(m.TapiPathComputationContextAugmentation1)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO2)

	aO3, err := swag.WriteJSON(m.TapiTopologyContextAugmentation3)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO3)

	var dataAO4 struct {
		ServiceInterfacePoint []*TapiCommonContextServiceInterfacePoint `json:"service-interface-point"`
	}

	dataAO4.ServiceInterfacePoint = m.ServiceInterfacePoint

	jsonDataAO4, errAO4 := swag.WriteJSON(dataAO4)
	if errAO4 != nil {
		return nil, errAO4
	}
	_parts = append(_parts, jsonDataAO4)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi common context
func (m *TapiCommonContext) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonGlobalClass
	if err := m.TapiCommonGlobalClass.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiConnectivityContextAugmentation2
	if err := m.TapiConnectivityContextAugmentation2.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiPathComputationContextAugmentation1
	if err := m.TapiPathComputationContextAugmentation1.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiTopologyContextAugmentation3
	if err := m.TapiTopologyContextAugmentation3.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceInterfacePoint(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiCommonContext) validateServiceInterfacePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceInterfacePoint) { // not required
		return nil
	}

	for i := 0; i < len(m.ServiceInterfacePoint); i++ {
		if swag.IsZero(m.ServiceInterfacePoint[i]) { // not required
			continue
		}

		if m.ServiceInterfacePoint[i] != nil {
			if err := m.ServiceInterfacePoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("service-interface-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiCommonContext) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiCommonContext) UnmarshalBinary(b []byte) error {
	var res TapiCommonContext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
