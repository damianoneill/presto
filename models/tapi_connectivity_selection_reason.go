// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiConnectivitySelectionReason tapi connectivity selection reason
// swagger:model tapi.connectivity.SelectionReason
type TapiConnectivitySelectionReason string

const (

	// TapiConnectivitySelectionReasonLOCKOUT captures enum value "LOCKOUT"
	TapiConnectivitySelectionReasonLOCKOUT TapiConnectivitySelectionReason = "LOCKOUT"

	// TapiConnectivitySelectionReasonNORMAL captures enum value "NORMAL"
	TapiConnectivitySelectionReasonNORMAL TapiConnectivitySelectionReason = "NORMAL"

	// TapiConnectivitySelectionReasonMANUAL captures enum value "MANUAL"
	TapiConnectivitySelectionReasonMANUAL TapiConnectivitySelectionReason = "MANUAL"

	// TapiConnectivitySelectionReasonFORCED captures enum value "FORCED"
	TapiConnectivitySelectionReasonFORCED TapiConnectivitySelectionReason = "FORCED"

	// TapiConnectivitySelectionReasonWAITTOREVERT captures enum value "WAIT_TO_REVERT"
	TapiConnectivitySelectionReasonWAITTOREVERT TapiConnectivitySelectionReason = "WAIT_TO_REVERT"

	// TapiConnectivitySelectionReasonSIGNALDEGRADE captures enum value "SIGNAL_DEGRADE"
	TapiConnectivitySelectionReasonSIGNALDEGRADE TapiConnectivitySelectionReason = "SIGNAL_DEGRADE"

	// TapiConnectivitySelectionReasonSIGNALFAIL captures enum value "SIGNAL_FAIL"
	TapiConnectivitySelectionReasonSIGNALFAIL TapiConnectivitySelectionReason = "SIGNAL_FAIL"
)

// for schema
var tapiConnectivitySelectionReasonEnum []interface{}

func init() {
	var res []TapiConnectivitySelectionReason
	if err := json.Unmarshal([]byte(`["LOCKOUT","NORMAL","MANUAL","FORCED","WAIT_TO_REVERT","SIGNAL_DEGRADE","SIGNAL_FAIL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiConnectivitySelectionReasonEnum = append(tapiConnectivitySelectionReasonEnum, v)
	}
}

func (m TapiConnectivitySelectionReason) validateTapiConnectivitySelectionReasonEnum(path, location string, value TapiConnectivitySelectionReason) error {
	if err := validate.Enum(path, location, value, tapiConnectivitySelectionReasonEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi connectivity selection reason
func (m TapiConnectivitySelectionReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiConnectivitySelectionReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
