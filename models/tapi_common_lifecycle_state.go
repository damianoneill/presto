// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiCommonLifecycleState tapi common lifecycle state
// swagger:model tapi.common.LifecycleState
type TapiCommonLifecycleState string

const (

	// TapiCommonLifecycleStatePLANNED captures enum value "PLANNED"
	TapiCommonLifecycleStatePLANNED TapiCommonLifecycleState = "PLANNED"

	// TapiCommonLifecycleStatePOTENTIALAVAILABLE captures enum value "POTENTIAL_AVAILABLE"
	TapiCommonLifecycleStatePOTENTIALAVAILABLE TapiCommonLifecycleState = "POTENTIAL_AVAILABLE"

	// TapiCommonLifecycleStatePOTENTIALBUSY captures enum value "POTENTIAL_BUSY"
	TapiCommonLifecycleStatePOTENTIALBUSY TapiCommonLifecycleState = "POTENTIAL_BUSY"

	// TapiCommonLifecycleStateINSTALLED captures enum value "INSTALLED"
	TapiCommonLifecycleStateINSTALLED TapiCommonLifecycleState = "INSTALLED"

	// TapiCommonLifecycleStatePENDINGREMOVAL captures enum value "PENDING_REMOVAL"
	TapiCommonLifecycleStatePENDINGREMOVAL TapiCommonLifecycleState = "PENDING_REMOVAL"
)

// for schema
var tapiCommonLifecycleStateEnum []interface{}

func init() {
	var res []TapiCommonLifecycleState
	if err := json.Unmarshal([]byte(`["PLANNED","POTENTIAL_AVAILABLE","POTENTIAL_BUSY","INSTALLED","PENDING_REMOVAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiCommonLifecycleStateEnum = append(tapiCommonLifecycleStateEnum, v)
	}
}

func (m TapiCommonLifecycleState) validateTapiCommonLifecycleStateEnum(path, location string, value TapiCommonLifecycleState) error {
	if err := validate.Enum(path, location, value, tapiCommonLifecycleStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi common lifecycle state
func (m TapiCommonLifecycleState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiCommonLifecycleStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
