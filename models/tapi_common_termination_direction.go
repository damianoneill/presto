// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiCommonTerminationDirection tapi common termination direction
// swagger:model tapi.common.TerminationDirection
type TapiCommonTerminationDirection string

const (

	// TapiCommonTerminationDirectionBIDIRECTIONAL captures enum value "BIDIRECTIONAL"
	TapiCommonTerminationDirectionBIDIRECTIONAL TapiCommonTerminationDirection = "BIDIRECTIONAL"

	// TapiCommonTerminationDirectionSINK captures enum value "SINK"
	TapiCommonTerminationDirectionSINK TapiCommonTerminationDirection = "SINK"

	// TapiCommonTerminationDirectionSOURCE captures enum value "SOURCE"
	TapiCommonTerminationDirectionSOURCE TapiCommonTerminationDirection = "SOURCE"

	// TapiCommonTerminationDirectionUNDEFINEDORUNKNOWN captures enum value "UNDEFINED_OR_UNKNOWN"
	TapiCommonTerminationDirectionUNDEFINEDORUNKNOWN TapiCommonTerminationDirection = "UNDEFINED_OR_UNKNOWN"
)

// for schema
var tapiCommonTerminationDirectionEnum []interface{}

func init() {
	var res []TapiCommonTerminationDirection
	if err := json.Unmarshal([]byte(`["BIDIRECTIONAL","SINK","SOURCE","UNDEFINED_OR_UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiCommonTerminationDirectionEnum = append(tapiCommonTerminationDirectionEnum, v)
	}
}

func (m TapiCommonTerminationDirection) validateTapiCommonTerminationDirectionEnum(path, location string, value TapiCommonTerminationDirection) error {
	if err := validate.Enum(path, location, value, tapiCommonTerminationDirectionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi common termination direction
func (m TapiCommonTerminationDirection) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiCommonTerminationDirectionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
