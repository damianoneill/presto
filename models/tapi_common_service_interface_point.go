// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiCommonServiceInterfacePoint tapi common service interface point
// swagger:model tapi.common.ServiceInterfacePoint
type TapiCommonServiceInterfacePoint struct {
	TapiCommonAdminStatePac

	TapiCommonCapacityPac

	TapiCommonGlobalClass

	// Usage of layerProtocolName [>1]  in the ServiceInterfacePoint should be considered experimental
	LayerProtocolName []TapiCommonLayerProtocolName `json:"layer-protocol-name"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiCommonServiceInterfacePoint) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonAdminStatePac
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonAdminStatePac = aO0

	// AO1
	var aO1 TapiCommonCapacityPac
	if err := swag.ReadJSON(raw, &aO1); err != nil {
		return err
	}
	m.TapiCommonCapacityPac = aO1

	// AO2
	var aO2 TapiCommonGlobalClass
	if err := swag.ReadJSON(raw, &aO2); err != nil {
		return err
	}
	m.TapiCommonGlobalClass = aO2

	// AO3
	var dataAO3 struct {
		LayerProtocolName []TapiCommonLayerProtocolName `json:"layer-protocol-name"`
	}
	if err := swag.ReadJSON(raw, &dataAO3); err != nil {
		return err
	}

	m.LayerProtocolName = dataAO3.LayerProtocolName

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiCommonServiceInterfacePoint) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 4)

	aO0, err := swag.WriteJSON(m.TapiCommonAdminStatePac)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	aO1, err := swag.WriteJSON(m.TapiCommonCapacityPac)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO1)

	aO2, err := swag.WriteJSON(m.TapiCommonGlobalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO2)

	var dataAO3 struct {
		LayerProtocolName []TapiCommonLayerProtocolName `json:"layer-protocol-name"`
	}

	dataAO3.LayerProtocolName = m.LayerProtocolName

	jsonDataAO3, errAO3 := swag.WriteJSON(dataAO3)
	if errAO3 != nil {
		return nil, errAO3
	}
	_parts = append(_parts, jsonDataAO3)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi common service interface point
func (m *TapiCommonServiceInterfacePoint) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonAdminStatePac
	if err := m.TapiCommonAdminStatePac.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiCommonCapacityPac
	if err := m.TapiCommonCapacityPac.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiCommonGlobalClass
	if err := m.TapiCommonGlobalClass.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiCommonServiceInterfacePoint) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	for i := 0; i < len(m.LayerProtocolName); i++ {

		if err := m.LayerProtocolName[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("layer-protocol-name" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiCommonServiceInterfacePoint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiCommonServiceInterfacePoint) UnmarshalBinary(b []byte) error {
	var res TapiCommonServiceInterfacePoint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
