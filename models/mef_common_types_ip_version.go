// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// MefCommonTypesIPVersion mef common types Ip version
// swagger:model mef.common.types.IpVersion
type MefCommonTypesIPVersion string

const (

	// MefCommonTypesIPVersionIPV4 captures enum value "IPV4"
	MefCommonTypesIPVersionIPV4 MefCommonTypesIPVersion = "IPV4"

	// MefCommonTypesIPVersionIPV6 captures enum value "IPV6"
	MefCommonTypesIPVersionIPV6 MefCommonTypesIPVersion = "IPV6"

	// MefCommonTypesIPVersionIPV4ANDIPV6 captures enum value "IPV4_AND_IPV6"
	MefCommonTypesIPVersionIPV4ANDIPV6 MefCommonTypesIPVersion = "IPV4_AND_IPV6"
)

// for schema
var mefCommonTypesIpVersionEnum []interface{}

func init() {
	var res []MefCommonTypesIPVersion
	if err := json.Unmarshal([]byte(`["IPV4","IPV6","IPV4_AND_IPV6"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mefCommonTypesIpVersionEnum = append(mefCommonTypesIpVersionEnum, v)
	}
}

func (m MefCommonTypesIPVersion) validateMefCommonTypesIPVersionEnum(path, location string, value MefCommonTypesIPVersion) error {
	if err := validate.Enum(path, location, value, mefCommonTypesIpVersionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this mef common types Ip version
func (m MefCommonTypesIPVersion) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMefCommonTypesIPVersionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
