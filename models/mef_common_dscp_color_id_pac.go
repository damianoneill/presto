// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// MefCommonDscpColorIDPac mef common dscp color Id pac
// swagger:model mef.common.DscpColorIdPac
type MefCommonDscpColorIDPac struct {

	// This attribute provides a list DSCP values map to the green ingress EI frames. The dscpValueForGreenList and the dscpValueForYellowList must disjoint and the union of the two lists must include all possible DSCP values.
	DscpValueForGreenList []int64 `json:"dscp-value-for-green-list"`

	// This attribute provides a list DSCP values map to the yellow ingress EI frames. The dscpValueForGreenList and the dscpValueForYellowList must disjoint and the union of the two lists must include all possible DSCP values.
	DscpValueForYellowList []int64 `json:"dscp-value-for-yellow-list"`

	// This attribute denotes which IP version is used. It can be IPV4, IPV6 or IPV4_AND_IPV6.
	IPVersion MefCommonTypesIPVersion `json:"ip-version,omitempty"`
}

// Validate validates this mef common dscp color Id pac
func (m *MefCommonDscpColorIDPac) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIPVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MefCommonDscpColorIDPac) validateIPVersion(formats strfmt.Registry) error {

	if swag.IsZero(m.IPVersion) { // not required
		return nil
	}

	if err := m.IPVersion.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("ip-version")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MefCommonDscpColorIDPac) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MefCommonDscpColorIDPac) UnmarshalBinary(b []byte) error {
	var res MefCommonDscpColorIDPac
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
