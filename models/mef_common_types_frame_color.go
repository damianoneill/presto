// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// MefCommonTypesFrameColor mef common types frame color
// swagger:model mef.common.types.FrameColor
type MefCommonTypesFrameColor string

const (

	// MefCommonTypesFrameColorGREEN captures enum value "GREEN"
	MefCommonTypesFrameColorGREEN MefCommonTypesFrameColor = "GREEN"

	// MefCommonTypesFrameColorYELLOW captures enum value "YELLOW"
	MefCommonTypesFrameColorYELLOW MefCommonTypesFrameColor = "YELLOW"
)

// for schema
var mefCommonTypesFrameColorEnum []interface{}

func init() {
	var res []MefCommonTypesFrameColor
	if err := json.Unmarshal([]byte(`["GREEN","YELLOW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mefCommonTypesFrameColorEnum = append(mefCommonTypesFrameColorEnum, v)
	}
}

func (m MefCommonTypesFrameColor) validateMefCommonTypesFrameColorEnum(path, location string, value MefCommonTypesFrameColor) error {
	if err := validate.Enum(path, location, value, mefCommonTypesFrameColorEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this mef common types frame color
func (m MefCommonTypesFrameColor) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMefCommonTypesFrameColorEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
