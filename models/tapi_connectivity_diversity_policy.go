// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiConnectivityDiversityPolicy tapi connectivity diversity policy
// swagger:model tapi.connectivity.DiversityPolicy
type TapiConnectivityDiversityPolicy string

const (

	// TapiConnectivityDiversityPolicySRLG captures enum value "SRLG"
	TapiConnectivityDiversityPolicySRLG TapiConnectivityDiversityPolicy = "SRLG"

	// TapiConnectivityDiversityPolicySRNG captures enum value "SRNG"
	TapiConnectivityDiversityPolicySRNG TapiConnectivityDiversityPolicy = "SRNG"

	// TapiConnectivityDiversityPolicySNG captures enum value "SNG"
	TapiConnectivityDiversityPolicySNG TapiConnectivityDiversityPolicy = "SNG"

	// TapiConnectivityDiversityPolicyNODE captures enum value "NODE"
	TapiConnectivityDiversityPolicyNODE TapiConnectivityDiversityPolicy = "NODE"

	// TapiConnectivityDiversityPolicyLINK captures enum value "LINK"
	TapiConnectivityDiversityPolicyLINK TapiConnectivityDiversityPolicy = "LINK"
)

// for schema
var tapiConnectivityDiversityPolicyEnum []interface{}

func init() {
	var res []TapiConnectivityDiversityPolicy
	if err := json.Unmarshal([]byte(`["SRLG","SRNG","SNG","NODE","LINK"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiConnectivityDiversityPolicyEnum = append(tapiConnectivityDiversityPolicyEnum, v)
	}
}

func (m TapiConnectivityDiversityPolicy) validateTapiConnectivityDiversityPolicyEnum(path, location string, value TapiConnectivityDiversityPolicy) error {
	if err := validate.Enum(path, location, value, tapiConnectivityDiversityPolicyEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi connectivity diversity policy
func (m TapiConnectivityDiversityPolicy) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiConnectivityDiversityPolicyEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
