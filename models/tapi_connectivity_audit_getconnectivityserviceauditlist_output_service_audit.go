// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceAudit tapi connectivity audit getconnectivityserviceauditlist output service audit
// swagger:model tapi.connectivity.audit.getconnectivityserviceauditlist.output.ServiceAudit
type TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceAudit struct {
	TapiCommonAdminStatePac

	TapiCommonGlobalClass

	// Name of the connectivity service.
	ConnectivityServiceName string `json:"connectivity-service-name,omitempty"`

	// Date and time the connectivity service was created.
	DateCommissioned string `json:"date-commissioned,omitempty"`

	// Date and time the connectivity service was deleted.
	DateDecommissioned string `json:"date-decommissioned,omitempty"`

	// none
	EndPoint []*TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceauditEndPoint `json:"end-point"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceAudit) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonAdminStatePac
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonAdminStatePac = aO0

	// AO1
	var aO1 TapiCommonGlobalClass
	if err := swag.ReadJSON(raw, &aO1); err != nil {
		return err
	}
	m.TapiCommonGlobalClass = aO1

	// AO2
	var dataAO2 struct {
		ConnectivityServiceName string `json:"connectivity-service-name,omitempty"`

		DateCommissioned string `json:"date-commissioned,omitempty"`

		DateDecommissioned string `json:"date-decommissioned,omitempty"`

		EndPoint []*TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceauditEndPoint `json:"end-point"`
	}
	if err := swag.ReadJSON(raw, &dataAO2); err != nil {
		return err
	}

	m.ConnectivityServiceName = dataAO2.ConnectivityServiceName

	m.DateCommissioned = dataAO2.DateCommissioned

	m.DateDecommissioned = dataAO2.DateDecommissioned

	m.EndPoint = dataAO2.EndPoint

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceAudit) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 3)

	aO0, err := swag.WriteJSON(m.TapiCommonAdminStatePac)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	aO1, err := swag.WriteJSON(m.TapiCommonGlobalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO1)

	var dataAO2 struct {
		ConnectivityServiceName string `json:"connectivity-service-name,omitempty"`

		DateCommissioned string `json:"date-commissioned,omitempty"`

		DateDecommissioned string `json:"date-decommissioned,omitempty"`

		EndPoint []*TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceauditEndPoint `json:"end-point"`
	}

	dataAO2.ConnectivityServiceName = m.ConnectivityServiceName

	dataAO2.DateCommissioned = m.DateCommissioned

	dataAO2.DateDecommissioned = m.DateDecommissioned

	dataAO2.EndPoint = m.EndPoint

	jsonDataAO2, errAO2 := swag.WriteJSON(dataAO2)
	if errAO2 != nil {
		return nil, errAO2
	}
	_parts = append(_parts, jsonDataAO2)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi connectivity audit getconnectivityserviceauditlist output service audit
func (m *TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceAudit) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonAdminStatePac
	if err := m.TapiCommonAdminStatePac.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiCommonGlobalClass
	if err := m.TapiCommonGlobalClass.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEndPoint(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceAudit) validateEndPoint(formats strfmt.Registry) error {

	if swag.IsZero(m.EndPoint) { // not required
		return nil
	}

	for i := 0; i < len(m.EndPoint); i++ {
		if swag.IsZero(m.EndPoint[i]) { // not required
			continue
		}

		if m.EndPoint[i] != nil {
			if err := m.EndPoint[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("end-point" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceAudit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceAudit) UnmarshalBinary(b []byte) error {
	var res TapiConnectivityAuditGetconnectivityserviceauditlistOutputServiceAudit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
