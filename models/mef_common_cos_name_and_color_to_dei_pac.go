// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// MefCommonCosNameAndColorToDeiPac mef common cos name and color to dei pac
// swagger:model mef.common.CosNameAndColorToDeiPac
type MefCommonCosNameAndColorToDeiPac struct {

	// This attribute denotes the egress frame DEI value, mapped from ingress CoS Name and ingress frame color.
	DeiValue MefCommonTypesDeiOrDiscard `json:"dei-value,omitempty"`

	// This attribute denotes the ingress frame color as one of the determined factor for Egress Map.
	IngressColor MefCommonTypesFrameColor `json:"ingress-color,omitempty"`

	// This attribute denotes the ingress CoS name.
	IngressCosName string `json:"ingress-cos-name,omitempty"`
}

// Validate validates this mef common cos name and color to dei pac
func (m *MefCommonCosNameAndColorToDeiPac) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeiValue(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIngressColor(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MefCommonCosNameAndColorToDeiPac) validateDeiValue(formats strfmt.Registry) error {

	if swag.IsZero(m.DeiValue) { // not required
		return nil
	}

	if err := m.DeiValue.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("dei-value")
		}
		return err
	}

	return nil
}

func (m *MefCommonCosNameAndColorToDeiPac) validateIngressColor(formats strfmt.Registry) error {

	if swag.IsZero(m.IngressColor) { // not required
		return nil
	}

	if err := m.IngressColor.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("ingress-color")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MefCommonCosNameAndColorToDeiPac) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MefCommonCosNameAndColorToDeiPac) UnmarshalBinary(b []byte) error {
	var res MefCommonCosNameAndColorToDeiPac
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
