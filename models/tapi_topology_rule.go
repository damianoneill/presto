// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiTopologyRule tapi topology rule
// swagger:model tapi.topology.Rule
type TapiTopologyRule struct {
	TapiCommonLocalClass

	// none
	ForwardingRule TapiTopologyForwardingRule `json:"forwarding-rule,omitempty"`

	// none
	OverridePriority int32 `json:"override-priority,omitempty"`

	// none
	RuleType TapiTopologyRuleType `json:"rule-type,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiTopologyRule) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonLocalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonLocalClass = aO0

	// AO1
	var dataAO1 struct {
		ForwardingRule TapiTopologyForwardingRule `json:"forwarding-rule,omitempty"`

		OverridePriority int32 `json:"override-priority,omitempty"`

		RuleType TapiTopologyRuleType `json:"rule-type,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.ForwardingRule = dataAO1.ForwardingRule

	m.OverridePriority = dataAO1.OverridePriority

	m.RuleType = dataAO1.RuleType

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiTopologyRule) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.TapiCommonLocalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		ForwardingRule TapiTopologyForwardingRule `json:"forwarding-rule,omitempty"`

		OverridePriority int32 `json:"override-priority,omitempty"`

		RuleType TapiTopologyRuleType `json:"rule-type,omitempty"`
	}

	dataAO1.ForwardingRule = m.ForwardingRule

	dataAO1.OverridePriority = m.OverridePriority

	dataAO1.RuleType = m.RuleType

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi topology rule
func (m *TapiTopologyRule) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonLocalClass
	if err := m.TapiCommonLocalClass.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateForwardingRule(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRuleType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiTopologyRule) validateForwardingRule(formats strfmt.Registry) error {

	if swag.IsZero(m.ForwardingRule) { // not required
		return nil
	}

	if err := m.ForwardingRule.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("forwarding-rule")
		}
		return err
	}

	return nil
}

func (m *TapiTopologyRule) validateRuleType(formats strfmt.Registry) error {

	if swag.IsZero(m.RuleType) { // not required
		return nil
	}

	if err := m.RuleType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("rule-type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiTopologyRule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiTopologyRule) UnmarshalBinary(b []byte) error {
	var res TapiTopologyRule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
