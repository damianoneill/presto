// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiCommonBandwidthProfileType tapi common bandwidth profile type
// swagger:model tapi.common.BandwidthProfileType
type TapiCommonBandwidthProfileType string

const (

	// TapiCommonBandwidthProfileTypeMEF10X captures enum value "MEF_10.x"
	TapiCommonBandwidthProfileTypeMEF10X TapiCommonBandwidthProfileType = "MEF_10.x"

	// TapiCommonBandwidthProfileTypeRFC2697 captures enum value "RFC_2697"
	TapiCommonBandwidthProfileTypeRFC2697 TapiCommonBandwidthProfileType = "RFC_2697"

	// TapiCommonBandwidthProfileTypeRFC2698 captures enum value "RFC_2698"
	TapiCommonBandwidthProfileTypeRFC2698 TapiCommonBandwidthProfileType = "RFC_2698"

	// TapiCommonBandwidthProfileTypeRFC4115 captures enum value "RFC_4115"
	TapiCommonBandwidthProfileTypeRFC4115 TapiCommonBandwidthProfileType = "RFC_4115"
)

// for schema
var tapiCommonBandwidthProfileTypeEnum []interface{}

func init() {
	var res []TapiCommonBandwidthProfileType
	if err := json.Unmarshal([]byte(`["MEF_10.x","RFC_2697","RFC_2698","RFC_4115"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiCommonBandwidthProfileTypeEnum = append(tapiCommonBandwidthProfileTypeEnum, v)
	}
}

func (m TapiCommonBandwidthProfileType) validateTapiCommonBandwidthProfileTypeEnum(path, location string, value TapiCommonBandwidthProfileType) error {
	if err := validate.Enum(path, location, value, tapiCommonBandwidthProfileTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi common bandwidth profile type
func (m TapiCommonBandwidthProfileType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiCommonBandwidthProfileTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
